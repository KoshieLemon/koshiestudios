/* reset */
html, body {
  margin: 0; padding: 0;
  width: 100%; height: 100%;
  overflow: hidden;
  background: #0e100f;
  color: #fff;
  font-family: system-ui, -apple-system, Segoe UI, Roboto, sans-serif;
  user-select: none;
}

#site-header { position: relative; z-index: 50; }

/* ===== Canvas / World ===== */
.viewport { position: relative; width: 100vw; height: 100vh; overflow: hidden; z-index: 1; }

.camera {
  position: absolute; inset: 0;
  --scale: 1;
  --pan-x: 0px;
  --pan-y: 0px;
  --zoom-dur: 900ms;
  --ease: cubic-bezier(.22,1,.36,1);
  background: #0e100f;
  transform-origin: var(--origin-x, 50%) var(--origin-y, 50%);
  transition: transform var(--zoom-dur) var(--ease);
}
.camera.zoom { transform: scale(var(--s)); }

.grid-wrapper {
  position: absolute; top: 50%; left: 50%;
  transform:
    translate(-50%, -50%)
    translate(var(--pan-x,0px), var(--pan-y,0px))
    scale(var(--scale,1));
  transition: transform 600ms var(--ease);
  cursor: grab;
}

:root {
  --cell-w: clamp(220px, 26vw, 360px);
  --cell-h: clamp(120px, 16vh, 220px);
  --cell-radius: 0;
}

.grid {
  display: grid;
  grid-template-columns: repeat(3, var(--cell-w));
  grid-auto-rows: var(--cell-h);
  gap: 0;
}

.cell {
  display: flex; align-items: center; justify-content: center;
  border: 1px solid rgba(255,255,255,.30);
  border-radius: var(--cell-radius);
  background: transparent;
  color: #fff;
  font-size: clamp(18px, 3.6vw, 36px);
  letter-spacing: .2px;
  line-height: 1;
  transition: border-color .2s ease, color .2s ease, opacity .2s ease, transform .2s ease;
}
.cell:not(.disabled):hover { border-color: rgba(255,255,255,.55); color: #fff; }
.cell.disabled { color: rgba(255,255,255,.45); border-color: rgba(255,255,255,.18); opacity: .85; }

/* Page overlay host (not used for external handoff) */
#content { position: absolute; inset: 0; background: #0e100f; opacity: 0; pointer-events: none; transition: opacity .9s var(--ease); z-index: 10; }
#content.visible { opacity: 1; pointer-events: auto; }
.page-frame { width: 100%; height: 100%; border: none; }

/* ===== Procedural dot field (spacing-only zoom: dots keep pixel size) ===== */
.dot-layer {
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  pointer-events: none;
  z-index: 0;
  transform-origin: 0 0;
  transform: translate(var(--pan-x,0px), var(--pan-y,0px)) scale(var(--scale,1));
  will-change: transform;
}
.dot {
  position: absolute;
  width: 2px; height: 2px;
  background: rgba(255,255,255,.28);
  border-radius: 50%;
  will-change: transform;
  box-shadow: 0 0 1px rgba(255,255,255,.25);
  /* keep dot size constant as camera scales spacing */
  transform: translate3d(var(--x, 0px), var(--y, 0px), 0) scale(calc(1 / var(--scale, 1)));
}

/* ===== Portal (visual preview layer for external) ===== */
.portal {
  position: fixed; left: 0; top: 0; width: 100vw; height: 100vh;
  transform-origin: 0 0;
  overflow: hidden; z-index: 1000;
  background: #0f1110;
  border-radius: 0;
  will-change: transform, opacity;
  opacity: 0; /* animated in JS */
  --fadeDur: 3500ms;
  --ease: cubic-bezier(.22,1,.36,1);
}

/* IMPORTANT:
   We want un-blur to run for the FULL duration.
   - Base (.portal .portal-frame) = CRISP (filter:none) and has a transition on filter.
   - Initial state (.portal.preload .portal-frame) applies blur+gray+dim.
   - When JS removes .preload at the START of the zoom, the filter transitions
     from blurred â†’ none over var(--fadeDur) with the same easing as zoom/fade. */
.portal .portal-frame {
  filter: none;
  transition: filter var(--fadeDur) var(--ease);
  pointer-events: none; /* non-interactive during the animation */
}
.portal.preload .portal-frame {
  filter: grayscale(1) blur(20px) brightness(.65);
}

.portal-frame {
  position: absolute; inset: 0;
  width: 100%; height: 100%;
  border: none; background: transparent;
  transform: translateZ(0);
}

/* Fallback (rare) */
.portal-fallback {
  position: absolute; inset: 0; display: grid; place-items: center;
  background: rgba(15,17,16,.92);
  color: #eee; font: 14px/1.4 system-ui, -apple-system, "Segoe UI", Roboto, sans-serif;
  text-align: center; padding: 24px;
}
.portal-fallback .pf-wrap { max-width: 520px; }
.portal-fallback .pf-title { font-weight: 700; font-size: 18px; margin-bottom: 6px; }
.portal-fallback .pf-sub { opacity: .85; margin-bottom: 14px; }
.portal-fallback .pf-actions { display: inline-flex; gap: 12px; }
.portal-fallback .pf-open {
  display: inline-flex; align-items: center; gap: 6px;
  padding: 8px 12px; border-radius: 10px;
  border: 1px solid rgba(255,255,255,.25); color: #fff; text-decoration: none;
}
.portal-fallback .pf-back {
  padding: 8px 12px; border-radius: 10px;
  border: 1px solid rgba(255,255,255,.15); color: #ddd; background: transparent;
}
